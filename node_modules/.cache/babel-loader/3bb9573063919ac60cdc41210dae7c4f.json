{"ast":null,"code":"export const initialState = {\n  basket: [],\n  user: null\n}; // Selector\n\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"ADD TO CART\":\n      // add to basket\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case 'EMPTY BASKET':\n      return { ...state,\n        basket: []\n      };\n\n    case 'REMOVE FROM BASKET':\n      //remove from basket checkoutProduct \n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`can remove product (id: ${action.id})as its not in basket!`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    case 'SET USER':\n      return { ...state,\n        user: action.user\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/vishu/Documents/Developing/REACT/clone/src/Hooks/reducer.js"],"names":["initialState","basket","user","getBasketTotal","reduce","amount","item","price","reducer","state","action","console","log","type","index","findIndex","basketItem","id","newBasket","splice","warn"],"mappings":"AACA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE,EADgB;AAExBC,EAAAA,IAAI,EAAE;AAFkB,CAArB,C,CAKL;;AACA,OAAO,MAAMC,cAAc,GAAIF,MAAD,IAC5BA,MAD4B,aAC5BA,MAD4B,uBAC5BA,MAAM,CAAEG,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA9C,EAAsD,CAAtD,CADK;;AAGP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACQ,SAAI,aAAJ;AAAqB;AACrB,aAAM,EACF,GAAGJ,KADD;AAEFR,QAAAA,MAAM,EAAC,CAAC,GAAGQ,KAAK,CAACR,MAAV,EAAiBS,MAAM,CAACJ,IAAxB;AAFL,OAAN;;AAIA,SAAK,cAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELR,QAAAA,MAAM,EAAE;AAFH,OAAP;;AAKF,SAAK,oBAAL;AAA2B;AACzB,YAAMa,KAAK,GAAGL,KAAK,CAACR,MAAN,CAAac,SAAb,CAAwBC,UAAD,IAAcA,UAAU,CAACC,EAAX,KAAgBP,MAAM,CAACO,EAA5D,CAAd;AACA,UAAIC,SAAS,GAAG,CAAC,GAAGT,KAAK,CAACR,MAAV,CAAhB;;AACA,UAAGa,KAAK,IAAE,CAAV,EAAY;AACVI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB;AACD,OAFD,MAEM;AACJH,QAAAA,OAAO,CAACS,IAAR,CACG,2BAA0BV,MAAM,CAACO,EAAG,wBADvC;AAGD;;AACD,aAAO,EACL,GAAGR,KADE;AAELR,QAAAA,MAAM,EAACiB;AAFF,OAAP;;AAIA,SAAK,UAAL;AACE,aAAO,EACL,GAAGT,KADE;AAELP,QAAAA,IAAI,EAACQ,MAAM,CAACR;AAFP,OAAP;;AAKV;AACE,aAAOO,KAAP;AAjCJ;AAmCD,CArCD;;AAuCA,eAAeD,OAAf","sourcesContent":["\nexport const initialState = {\n    basket: [],\n    user: null\n  };\n  \n  // Selector\n  export const getBasketTotal = (basket) => \n    basket?.reduce((amount, item) => item.price + amount, 0);\n  \n  const reducer = (state, action) => {\n    console.log(action);\n    switch (action.type) {\n            case\"ADD TO CART\":   // add to basket\n            return{\n                ...state,\n                basket:[...state.basket,action.item],\n            };\n            case 'EMPTY BASKET':\n              return {\n                ...state,\n                basket: []\n              }\n\n            case 'REMOVE FROM BASKET': //remove from basket checkoutProduct \n              const index = state.basket.findIndex((basketItem)=>basketItem.id===action.id);\n              let newBasket = [...state.basket];\n              if(index>=0){\n                newBasket.splice(index ,1 );\n              } else{\n                console.warn(\n                  `can remove product (id: ${action.id})as its not in basket!`\n                )\n              }\n              return {\n                ...state,\n                basket:newBasket\n              }\n              case 'SET USER':\n                return {\n                  ...state,\n                  user:action.user\n                }\n            \n      default:\n        return state;\n    }\n  };\n  \n  export default reducer;"]},"metadata":{},"sourceType":"module"}